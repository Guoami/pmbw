
set terminal pdf size 28cm,18cm linewidth 2.0
set output "plots.pdf"
set macros

set pointsize 0.7
set style line 6 lc rgb "#f0b000"
set style line 15 lc rgb "#f0b000"
set style line 24 lc rgb "#f0b000"
set style line 33 lc rgb "#f0b000"
set style line 42 lc rgb "#f0b000"
set style line 51 lc rgb "#f0b000"
set style line 60 lc rgb "#f0b000"
set style increment user

# CREATE INDEX mybandwidth_key ON mybandwidth (funcname,nprocs)

set grid xtics ytics
set xtics 1
set xlabel 'Input Size Log_2 [b]'

# SELECT MACRO host AS hostname FROM "mybandwidth" GROUP BY host
hostname = 'i10pc124.iti.kit.edu'

set key top right
set title hostname.' - One Processor Memory Bandwidth'
set ylabel 'Bandwidth [GiB/s]'
# SELECT MULTIPLOT(funcname) LOG(2,testsize) AS x, bandwidth / 1024/1024/1024 AS y, MULTIPLOT FROM "mybandwidth" WHERE nprocs=1 ORDER BY MULTIPLOT,testsize

set key top left
set title hostname.' - One Processor Memory Latency'
set ylabel 'Access Time [ns]'
# SELECT MULTIPLOT(funcname) LOG(2,testsize) AS x, rate * 1e9 AS y, MULTIPLOT FROM "mybandwidth" WHERE nprocs=1 ORDER BY MULTIPLOT,testsize

set key top left
set title hostname.' - One Processor Memory Latency (Excluding Permutation)'
set ylabel 'Access Time [ns]'
# SELECT MULTIPLOT(funcname) LOG(2,testsize) AS x, rate * 1e9 AS y, MULTIPLOT FROM "mybandwidth" WHERE nprocs=1 AND funcname !~ 'Perm' ORDER BY MULTIPLOT,testsize

set key top right
set title hostname.' - One Processor Memory Bandwidth (only 64-bit Reads)'
set ylabel 'Bandwidth [GiB/s]'
# SELECT MULTIPLOT(funcname) LOG(2,testsize) AS x, bandwidth / 1024/1024/1024 AS y, MULTIPLOT FROM "mybandwidth" WHERE nprocs=1 AND funcname ~ 'Read64' ORDER BY MULTIPLOT,testsize

set key top right
set title hostname.' - One Processor Memory Bandwidth - Ratio over funcSeqRead64PtrSimpleLoop (only 64-bit Reads)'
set ylabel 'Bandwidth [GiB/s]'
# SELECT MULTIPLOT(funcname) LOG(2,testsize) AS x, bandwidth / (SELECT b2.bandwidth FROM "mybandwidth" b2 WHERE b2.nprocs=1 AND b2.funcname='funcSeqRead64PtrSimpleLoop' AND b2.testsize = mybandwidth.testsize) y, MULTIPLOT FROM "mybandwidth" WHERE nprocs=1 AND funcname ~ 'Read64' ORDER BY MULTIPLOT,testsize

set key top left
set title hostname.' - One Processor Memory Latency - Ratio over funcSeqRead64PtrSimpleLoop (only 64-bit Reads)'
set ylabel 'Access Time [ns]'
# SELECT MULTIPLOT(funcname) LOG(2,testsize) AS x, rate / (SELECT rate FROM "mybandwidth" b2 WHERE b2.nprocs=1 AND b2.funcname='funcSeqRead64PtrSimpleLoop' AND b2.testsize = mybandwidth.testsize) AS y, MULTIPLOT FROM "mybandwidth" WHERE nprocs=1 AND funcname ~ 'Read64' ORDER BY MULTIPLOT,testsize

set key top left
set title hostname.' - One Processor Memory Latency - Ratio over funcSeqRead64PtrSimpleLoop (only 64-bit Reads, excluding Permutation)'
set ylabel 'Access Time [ns]'
# SELECT MULTIPLOT(funcname) LOG(2,testsize) AS x, rate / (SELECT rate FROM "mybandwidth" b2 WHERE b2.nprocs=1 AND b2.funcname='funcSeqRead64PtrSimpleLoop' AND b2.testsize = mybandwidth.testsize) AS y, MULTIPLOT FROM "mybandwidth" WHERE nprocs=1 AND funcname ~ 'Read64' AND funcname !~ 'Perm' ORDER BY MULTIPLOT,testsize




[% BLOCK funcplot %]
set key top right
set title hostname.' - Memory Bandwidth - [% func %]'
set ylabel 'Bandwidth [GiB/s]'
# SELECT MULTIPLOT(funcname,nprocs) LOG(2,testsize) AS x, bandwidth / 1024/1024/1024 AS y, MULTIPLOT FROM "mybandwidth" WHERE funcname='[% func %]' ORDER BY MULTIPLOT,testsize

set title hostname.' - Memory Latency - [% func %]'
set ylabel 'Access Time [ns]'
# SELECT MULTIPLOT(funcname,nprocs) LOG(2,testsize) AS x, rate * 1e9 AS y, MULTIPLOT FROM "mybandwidth" WHERE funcname = '[% func %]' ORDER BY MULTIPLOT,testsize

set title hostname.' - Speedup of Memory Bandwidth - [% func %]'
set ylabel 'Bandwidth Speedup [1]'
# SELECT MULTIPLOT(funcname,nprocs) LOG(2,testsize) AS x, bandwidth / (SELECT bandwidth FROM "mybandwidth" b2 WHERE b2.nprocs=1 AND b2.funcname=mybandwidth.funcname AND b2.areasize = mybandwidth.areasize) AS y, MULTIPLOT FROM "mybandwidth" WHERE funcname='[% func %]' ORDER BY MULTIPLOT,testsize

# SELECT MACRO AVG(maxspeedup) AS avgspeedup FROM ( SELECT MAX( bandwidth / (SELECT bandwidth FROM "mybandwidth" b WHERE b.nprocs=1 AND b.funcname=mybandwidth.funcname AND b.areasize = mybandwidth.areasize) ) AS maxspeedup FROM "mybandwidth" WHERE funcname='[% func %]' GROUP BY areasize ) t

set title hostname.' - Speedup of Memory Bandwidth (Enlarged) - [% func %]'
set yrange [*:avgspeedup]
replot
set yrange [*:*]

##############################
[% END # BLOCK %]

######################################################################

[% PROCESS funcplot func='funcSeqRead64PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSeqRead64PtrUnrollLoop' -%]
[% PROCESS funcplot func='funcSeqWrite64PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSeqWrite64PtrUnrollLoop' -%]

[% PROCESS funcplot func='funcSeqRead128PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSeqRead128PtrUnrollLoop' -%]
[% PROCESS funcplot func='funcSeqWrite128PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSeqWrite128PtrUnrollLoop' -%]

[% PROCESS funcplot func='funcSeqRead64IndexSimpleLoop' -%]
[% PROCESS funcplot func='funcSeqRead64IndexUnrollLoop' -%]
[% PROCESS funcplot func='funcSeqWrite64IndexSimpleLoop' -%]
[% PROCESS funcplot func='funcSeqWrite64IndexUnrollLoop' -%]

[% PROCESS funcplot func='funcSkipRead64PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSkipWrite64PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSkipRead128PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSkipWrite128PtrSimpleLoop' -%]
[% PROCESS funcplot func='funcSkipRead64IndexSimpleLoop' -%]
[% PROCESS funcplot func='funcSkipWrite64IndexSimpleLoop' -%]

[% PROCESS funcplot func='funcPermRead64SimpleLoop' -%]
[% PROCESS funcplot func='funcPermRead64UnrollLoop' -%]
